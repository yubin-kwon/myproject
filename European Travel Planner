# 유럽 주요 도시 리스트와 대략적인 이동 시간 정보
import random

# 유럽 주요 도시 리스트
european_cities = [
    "London", "Paris", "Rome", "Berlin", "Barcelona",
    "Amsterdam", "Vienna", "Prague", "Lisbon", "Athens",
    "Copenhagen", "Stockholm", "Madrid", "Dublin", "Zurich",
    "Budapest", "Warsaw", "Oslo", "Brussels", "Helsinki"
]

# 이동 시간 딕셔너리 (추가/수정 가능)
travel_times = {
    "London": {
        "Paris": {"flight": 1.25, "train": 2.25},
        "Rome": {"flight": 2.5, "train": 12}
    },
    "Paris": {
        "Berlin": {"flight": 1.5, "train": 8},
        "Rome": {"flight": 2, "train": 10}
    },
    "Berlin": {
        "Vienna": {"flight": 1.25, "train": 8},
        "Prague": {"flight": 1, "train": 4.5}
    },
    "Barcelona": {
        "Lisbon": {"flight": 1.75, "train": 10},
        "Madrid": {"flight": 1.25, "train": 3}
    },
    "Amsterdam": {
        "Copenhagen": {"flight": 1.5, "train": 12},
        "Paris": {"flight": 1.25, "train": 3.5}
    }
}

# 랜덤으로 시작점과 도착점 선택 함수
def random_travel_plan():
    start_city = random.choice(european_cities)
    end_city = random.choice([city for city in european_cities if city != start_city])

    # 이동 시간 계산
    flight_time = travel_times.get(start_city, {}).get(end_city, {}).get("flight", "N/A")
    train_time = travel_times.get(start_city, {}).get(end_city, {}).get("train", "N/A")

    # 특정 도시 조건 추가 (예: 더블린은 기차 옵션 제외)
    if start_city == "Dublin" or end_city == "Dublin":
        train_time = "N/A"

    return start_city, end_city, flight_time, train_time

# 실행 예시
if __name__ == "__main__":
    start, end, flight, train = random_travel_plan()
    print(f"출발 도시: {start}")
    print(f"도착 도시: {end}")
    print(f"비행 시간: {flight} 시간")
    print(f"기차 시간: {train} 시간")
